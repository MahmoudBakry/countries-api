{"version":3,"sources":["../../src/routes/region.route.js"],"names":["requireAuth","authenticate","session","router","Router","route","post","validateBody","createRegion","get","allRegions","regionInformaton","put","updateRegion"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,cAAc,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAApB;AACA,IAAMC,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,KAAP,CAAa,oCAAb;AACI;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AAxDJ,CAyDKC,IAzDL,CA0DQN,WA1DR,EA2DQ,iBAAiBO,YAAjB,EA3DR,EA4DQ,iBAAiBC,YA5DzB;AA8DI;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAhEJ,CAuFKC,GAvFL,CAuFS,iBAAiBC,UAvF1B;;AA0FA;AACAP,OAAOE,KAAP,CAAa,8CAAb;AACI;AADJ,CAEKI,GAFL,CAES,iBAAiBE,gBAF1B;AAGI;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJJ,CAmCKC,GAnCL,CAoCQZ,WApCR,EAqCQ,iBAAiBa,YArCzB;;kBAuCeV,M","file":"region.route.js","sourcesContent":["import express from \"express\";\r\nimport regionController from \"../controllers/region.controller\";\r\nimport passport from \"passport\";\r\nconst requireAuth = passport.authenticate('jwt', { session: false });\r\nconst router = express.Router();\r\n\r\nrouter.route('/:countryId/cities/:cityId/regions')\r\n    /**\r\n        * @swagger\r\n        * definitions:\r\n        *   region:\r\n        *     required:\r\n        *     - \"name\"\r\n        *     - \"city\"   \r\n        *     properties:\r\n        *       name:\r\n        *         type: string\r\n        *       creationDate:\r\n        *         type: date\r\n        *         readOnly : true  \r\n        *       city: \r\n        *         type : string\r\n        *         readOnly : true   \r\n        */\r\n\r\n    /**\r\n * @swagger\r\n * /countries/{countryId}/cities/{cityId}/regions:\r\n *   post:\r\n *     tags:\r\n *       - Region\r\n *     description: create new region\r\n *     parameters: \r\n *       - name: countryId\r\n *         descrition : country ID\r\n *         in : path\r\n *         required : true\r\n *       - name: cityId\r\n *         descrition : city ID\r\n *         in : path\r\n *         required : true\r\n *       - name: name\r\n *         description: name of city\r\n *         in: body\r\n *         required: true            \r\n *         schema:\r\n *           $ref: '#/definitions/region'\r\n *     responses:\r\n *       201:\r\n *         description: return created region \r\n *       400:\r\n *         description: You have made an error maybe you didn't provide a required attribute\r\n *       422: \r\n *         description: name of region is duplicated in the  same country or any invalid data\r\n *       403: \r\n *         description: your token is bbelong to normal user not an admin[forrbiden] \r\n *       401: \r\n *         description: token is required    \r\n*/\r\n\r\n\r\n\r\n    //create new city\r\n    .post(\r\n        requireAuth,\r\n        regionController.validateBody(),\r\n        regionController.createRegion\r\n    )\r\n    //retrive all regions\r\n\r\n    /**\r\n    * @swagger\r\n    * /countries/{countryId}/cities/{cityId}/regions:\r\n    *   get:\r\n    *     tags:\r\n    *       - Region\r\n    *     description: retrive all regions\r\n    *     parameters : \r\n    *       - name : countryId\r\n    *         in : path\r\n    *         required : true\r\n    *       - name : cityId\r\n    *         in : path\r\n    *         required : true       \r\n    *     responses:\r\n    *       200:\r\n    *         description: return all regions \r\n    *       401: \r\n    *         description: token is required\r\n    *       204: \r\n    *         description: no content exist now \r\n    *   \r\n   */\r\n    .get(regionController.allRegions)\r\n\r\n\r\n//routes that used regionId \r\nrouter.route('/:countryId/cities/:cityId/regions/:regionId')\r\n    //retrive one region \r\n    .get(regionController.regionInformaton)\r\n    //update one \r\n    /**\r\n   * @swagger\r\n   * /countries/{countryId}/cities/{cityId}/regions/{regionId}:\r\n   *   put:\r\n   *     tags:\r\n   *       - Region\r\n   *     description: update one region\r\n   *     parameters:\r\n   *       - name : regionId \r\n   *         in : path\r\n   *         required : true\r\n   *       - name: name\r\n   *         description: name of city\r\n   *         in: body\r\n   *         required: false \r\n   *       - name: city\r\n   *         description: cityId\r\n   *         in: body\r\n   *         required: false     \r\n   *         schema:\r\n   *           $ref: '#/definitions/region' \r\n   *     responses:\r\n   *       200:\r\n   *         description: updating proccess done  \r\n   *       403: \r\n   *         description: your token is bbelong to normal user not an admin[forrbiden] \r\n   *       401: \r\n   *         description: token is required\r\n   *       422: \r\n   *         description: validation error may duplicated region name \r\n  */\r\n    .put(\r\n        requireAuth,\r\n        regionController.updateRegion)\r\n\r\nexport default router; "]}